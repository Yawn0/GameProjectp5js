/* Blobby pose renderers (no logic side-effects) */

/** Idle / neutral pose */
function blobbyStandingFront() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    fill(BLOBBY.COLORS.BODY);
    ellipse(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT);
    fill(BLOBBY.COLORS.ARM);
    rect(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH / 2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.4, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    rect(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH / 2 - BLOBBY.DIMENSIONS.ARM_WIDTH, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.4, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE, BLOBBY.DIMENSIONS.EYE_SIZE);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE, BLOBBY.DIMENSIONS.EYE_SIZE);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.65, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    arc(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.65, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    stroke(BLOBBY.COLORS.MOUTH);
    noFill();
    arc(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35, 10, 5, 0, PI);
}

/** Vertical jump / airborne idle */
function blobbyJumping() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.15, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2 + 5, BLOBBY.DIMENSIONS.FEET_WIDTH * 0.8, BLOBBY.DIMENSIONS.FEET_HEIGHT * 0.8);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.15, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2 + 5, BLOBBY.DIMENSIONS.FEET_WIDTH * 0.8, BLOBBY.DIMENSIONS.FEET_HEIGHT * 0.8);
    fill(BLOBBY.COLORS.BODY);
    ellipse(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT * 1.1);
    fill(BLOBBY.COLORS.ARM);
    rect(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH / 2 + 2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.5 - BLOBBY.DIMENSIONS.ARM_LENGTH * 0.5, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    rect(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH / 2 - BLOBBY.DIMENSIONS.ARM_WIDTH - 2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.5 - BLOBBY.DIMENSIONS.ARM_LENGTH * 0.5, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE * 1.2, BLOBBY.DIMENSIONS.EYE_SIZE * 1.2);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE * 1.2, BLOBBY.DIMENSIONS.EYE_SIZE * 1.2);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.7, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    arc(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.7, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    noStroke();
    fill(BLOBBY.COLORS.MOUTH);
    ellipse(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35, 8, 8);
}

/** Walk cycle facing left */
function blobbyWalkingLeft() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 + 3, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH * 1.1, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    fill(BLOBBY.COLORS.BODY);
    ellipse(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1 + 3, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    fill(BLOBBY.COLORS.ARM);
    rect(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH / 2 + 20, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.5 - BLOBBY.DIMENSIONS.ARM_LENGTH * 0.5, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE, BLOBBY.DIMENSIONS.EYE_SIZE);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 - 1, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.65, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    stroke(BLOBBY.COLORS.MOUTH);
    line(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.3, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35, _gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35);
}

/** Walk cycle facing right */
function blobbyWalkingRight() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 - 3, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH * 1.1, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    fill(BLOBBY.COLORS.BODY);
    ellipse(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1 - 3, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2, BLOBBY.DIMENSIONS.FEET_WIDTH, BLOBBY.DIMENSIONS.FEET_HEIGHT);
    fill(BLOBBY.COLORS.ARM);
    rect(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH / 2 + 15, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.5 - BLOBBY.DIMENSIONS.ARM_LENGTH * 0.5, BLOBBY.DIMENSIONS.ARM_WIDTH, BLOBBY.DIMENSIONS.ARM_LENGTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.EYE_SIZE, BLOBBY.DIMENSIONS.EYE_SIZE);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 + 1, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.6, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.65, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    stroke(BLOBBY.COLORS.MOUTH);
    line(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35, _gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.3, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.35);
}

/** Airborne with leftward momentum */
function blobbyJumpingLeft() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x + BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2 + 5, BLOBBY.DIMENSIONS.FEET_WIDTH * 0.9, BLOBBY.DIMENSIONS.FEET_HEIGHT * 0.9);
    push();
    translate(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2);
    rotate(-PI / 12.0);
    fill(BLOBBY.COLORS.BODY);
    ellipse(0, 0, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT * 1.05);
    fill(BLOBBY.COLORS.ARM);
    rect(BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2 - BLOBBY.DIMENSIONS.ARM_LENGTH * 1.2, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1 + 10, BLOBBY.DIMENSIONS.ARM_LENGTH * 1.2, BLOBBY.DIMENSIONS.ARM_WIDTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(-BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1, BLOBBY.DIMENSIONS.EYE_SIZE * 1.1, BLOBBY.DIMENSIONS.EYE_SIZE * 1.1);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(-BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 - 1, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(-BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    noStroke();
    fill(BLOBBY.COLORS.MOUTH);
    ellipse(-BLOBBY.DIMENSIONS.BODY_WIDTH * 0.4, BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.2, 6, 6);
    pop();
}

/** Airborne with rightward momentum */
function blobbyJumpingRight() {
    stroke(0);
    fill(BLOBBY.COLORS.FEET);
    ellipse(_gameChar.x - BLOBBY.DIMENSIONS.BODY_WIDTH * 0.1, _gameChar.y - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2 + 5, BLOBBY.DIMENSIONS.FEET_WIDTH * 0.9, BLOBBY.DIMENSIONS.FEET_HEIGHT * 0.9);
    push();
    translate(_gameChar.x, _gameChar.y - BLOBBY.DIMENSIONS.BODY_HEIGHT / 2 - BLOBBY.DIMENSIONS.FEET_HEIGHT / 2);
    rotate(PI / 12.0);
    fill(BLOBBY.COLORS.BODY);
    ellipse(0, 0, BLOBBY.DIMENSIONS.BODY_WIDTH, BLOBBY.DIMENSIONS.BODY_HEIGHT * 1.05);
    fill(BLOBBY.COLORS.ARM);
    rect(-BLOBBY.DIMENSIONS.BODY_WIDTH * 0.2, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1 + 10, BLOBBY.DIMENSIONS.ARM_LENGTH * 1.2, BLOBBY.DIMENSIONS.ARM_WIDTH, 5);
    noStroke();
    fill(BLOBBY.COLORS.EYE);
    ellipse(BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1, BLOBBY.DIMENSIONS.EYE_SIZE * 1.1, BLOBBY.DIMENSIONS.EYE_SIZE * 1.1);
    fill(BLOBBY.COLORS.PUPIL);
    ellipse(BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25 + 1, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.1, BLOBBY.DIMENSIONS.PUPIL_SIZE, BLOBBY.DIMENSIONS.PUPIL_SIZE);
    stroke(BLOBBY.COLORS.PUPIL);
    noFill();
    arc(BLOBBY.DIMENSIONS.BODY_WIDTH * 0.25, -BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.DIMENSIONS.PUPIL_SIZE * 2, BLOBBY.EYEBROW_START, BLOBBY.EYEBROW_STOP);
    noStroke();
    fill(BLOBBY.COLORS.MOUTH);
    ellipse(-BLOBBY.DIMENSIONS.BODY_WIDTH * -0.4, BLOBBY.DIMENSIONS.BODY_HEIGHT * 0.2, 6, 6);
    pop();
}
